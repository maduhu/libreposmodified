/*
 * JPaymentPrepaidCard.java
 *
 * Created on February 5, 2008, 2:38 PM
 */

package org.emar.prepaid.tpv.payment;

import java.awt.Component;
import java.util.Date;
import net.adrianromero.basic.BasicException;
import net.adrianromero.data.gui.JMessageDialog;
import net.adrianromero.data.gui.MessageInf;
import net.adrianromero.format.Formats;
import net.adrianromero.tpv.forms.AppUser;
import net.adrianromero.tpv.forms.AppViewConnection;
import net.adrianromero.tpv.forms.UserView;
import net.adrianromero.tpv.payment.JPaymentInterface;
import net.adrianromero.tpv.payment.JPaymentNotifier;
import net.adrianromero.tpv.payment.PaymentInfo;
import org.emar.prepaid.MovimientosTarjeta;
import org.emar.prepaid.Tarjeta;

/**
 *
 * @author  marcelo
 */
public class JPaymentPrepaidCard extends javax.swing.JPanel implements JPaymentInterface {
    private JPaymentNotifier m_notifier;
    private String m_iNumeroTarjeta;
    private double m_dSaldo;
    private double m_dTotal;    
    private AppViewConnection m_appcnt;
    private Tarjeta card;
    private UserView m_User;
    /** Creates new form JPaymentPrepaidCard */
    public JPaymentPrepaidCard(JPaymentNotifier m_notifier, UserView user) {
        this.m_notifier = m_notifier;
        m_appcnt = null;
        m_User = user;
        card = null;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCard = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jOwner = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jBalance = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jStatus = new javax.swing.JTextField();

        jLabel1.setText("Deslice Tarjeta");

        jCard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jCardKeyTyped(evt);
            }
        });

        jLabel2.setText("Dueño");

        jOwner.setEnabled(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/adrianromero/images/search.png"))); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel3.setText("Saldo");

        jBalance.setEnabled(false);

        jLabel4.setText("Estado");

        jStatus.setEditable(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(jLabel3)
                    .add(jLabel4))
                .add(24, 24, 24)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jStatus)
                    .add(jBalance)
                    .add(jOwner)
                    .add(jCard, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jCard, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .add(19, 19, 19)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jOwner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jBalance, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(147, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void readDataPrepaidCard()
    {
        if (m_appcnt == null) {
            try {
                m_appcnt = new AppViewConnection();
            } catch (BasicException e) {
                JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER,e.getMessage()));
            }
        }
        this.m_iNumeroTarjeta = jCard.getText();
        
        try {
            card = Tarjeta.findId(m_appcnt.getSession(), this.m_iNumeroTarjeta);
        } catch (BasicException ex) {
            JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER,ex.getMessage()));
        }
        reset();
        if (card != null)
        {
            jOwner.setText(card.getCliente().getApellido() + " " + card.getCliente().getNombre());
            jBalance.setText(Formats.DOUBLE.formatValue(card.getSaldo()));
            jStatus.setText("A".equals(card.getEstado())?"ACTIVA":"INACTIVA");
        }        
        printState();
    }
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        readDataPrepaidCard();
    }//GEN-LAST:event_jButton1MouseClicked

    private void reset()
    {
        jOwner.setText("");
        jBalance.setText("");
        jStatus.setText("");
    }
    
    private void jCardKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCardKeyTyped
        if (evt.getKeyChar() == '\n')
        {
            readDataPrepaidCard();
        }
        else
        {
            reset();
        }
    }//GEN-LAST:event_jCardKeyTyped
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jBalance;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jCard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jOwner;
    private javax.swing.JTextField jStatus;
    // End of variables declaration//GEN-END:variables

    public void activate(String sTransaction, double dTotal) {
         m_dTotal = dTotal;  
         jCard.setText("");
         jOwner.setText("");
         jBalance.setText("");
         jStatus.setText("");
        printState();
    }

    public PaymentInfo executePayment() {
        readDataPrepaidCard();
        if ( card == null ) return null;
        
        if (!"A".equals(card.getEstado()))
        {
            JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER,"La tarjeta está inactiva no se puede ejecutar el pago"));
        }
        
        m_dSaldo = card.getSaldo();
        double d_cobrar;
        if (m_dTotal <= m_dSaldo )
        {
           d_cobrar = m_dTotal;             
        }
        else
        {
           d_cobrar = m_dSaldo;
        }
        if (card.cobrar(d_cobrar))
        {
            try {
                MovimientosTarjeta movTar = new MovimientosTarjeta();
                movTar.setFecha_movimiento(new Date());
                movTar.setId_tarjeta(card.getIdentificador());
                movTar.setObservacion("cobro");
                movTar.setUsuario(m_User.getUser().getName());
                movTar.setValor_transaccion(d_cobrar);
                Tarjeta.save(m_appcnt.getSession(), card, movTar);
            } catch (BasicException ex) {
                JMessageDialog.showMessage(this, new MessageInf(MessageInf.SGN_DANGER,"No se pudo guardar el cobro de la tarjeta"));
                return null;
            }
            return new PaymentInfoPrepaidCard(d_cobrar, card.getSaldo(), card.getOwnerInfo());
        }
        return null;
    }

    public Component getComponent() {
        return this;
    }
    
    private void printState() {
        m_notifier.setAddEnabled(false);
        m_notifier.setOKEnabled(false);

        if (card == null) return;
        
        m_dSaldo = card.getSaldo();
        
        if (m_dTotal <= m_dSaldo)
        {
            m_notifier.setOKEnabled(true);            
        }
        
        if (m_dSaldo > 0)
        {
            m_notifier.setAddEnabled(true);
        }
        
        
    }
    
}
